"use strict";function e(t,s={sortKeys:!1,handleCycles:!1},n=new WeakSet){switch(typeof t){case"number":return`n${t}`;case"string":return`s${t}`;case"boolean":return`b${t}`;case"undefined":return"u";case"function":return`f${t.toString()}`;case"symbol":return`y${t.toString()}`;case"object":{if(null===t)return"null";if(s.handleCycles){if(n.has(t))return"[Circular]";n.add(t)}if(Array.isArray(t)){let r="a[";for(let o=0;o<t.length;o++)r+=`${e(t[o],s,n)},`;return s.handleCycles&&n.delete(t),r+"]"}let r=Object.keys(t);s.sortKeys&&r.sort();let o="o{";for(let i=0;i<r.length;i++){const a=r[i];o+=`${a}:${e(t[a],s,n)}|`}return s.handleCycles&&n.delete(t),o+"}"}}return"unknown"}var t=Object.freeze({__proto__:null,default:class{dopeMap;primitiveKeys=new Set(["string","number"]);hashFunction=e;hashConfig=void 0;constructor(e={}){this.handleConfig(e),this.dopeMap=new Map}handleConfig(e){if(e?.hashFunction){if("function"!=typeof e.hashFunction)throw new Error("[DOPE] Provided hashFunction must be a function.  Not dope!");this.hashFunction=e.hashFunction}else this.hashConfig=e?.hashConfig}isHashedKey(e){return this.primitiveKeys.has(typeof e)}getHashedKey(e){return this.isHashedKey(e)?e:this.hashFunction(e,this.hashConfig)}set(e,t){const s=this.getHashedKey(e);this.dopeMap.set(s,{k:e,v:t})}get(e){const t=this.getHashedKey(e),s=this.dopeMap.get(t);return s?.v}has(e){const t=this.getHashedKey(e);return this.dopeMap.has(t)}delete(e){const t=this.getHashedKey(e);return this.dopeMap.delete(t)}get size(){return this.dopeMap.size}getMap(){return Object.fromEntries(this.dopeMap.entries())}clear(){return this.dopeMap.clear()}entries(e){const t=function*(e){for(const{k:t,v:s}of e.values())yield[t,s]}(this.dopeMap);return e?Array.from(t):t}forEach(e){for(const{k:t,v:s}of this.dopeMap.values())e(s,t,this)}keys(e){const t=function*(e){for(const{k:t}of e.values())yield t}(this.dopeMap);return e?Array.from(t):t}values(e){const t=function*(e){for(const{v:t}of e.values())yield t}(this.dopeMap);return e?Array.from(t):t}}});module.exports=t;
//# sourceMappingURL=index.cjs.js.map
